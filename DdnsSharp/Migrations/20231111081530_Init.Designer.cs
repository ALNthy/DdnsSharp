// <auto-generated />
using System;
using DdnsSharp.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DdnsSharp.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20231111081530_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("DdnsSharp.Model.DdnsConfig", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IPV4")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPV6")
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceName")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("Ttl")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.ToTable("T_DdnsConfigs", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
